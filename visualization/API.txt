/api/info =>
    {
        "teams": {"team_id": "team_name", ...}
        "services": {"service_id": "service_name", ...}
        "start": "time(millisec)"
    }

/api/scoreboard =>
    {
        "table": {"team_id": "score", ...},
        "status": "0"|... (0 — NOT_STARTED, 1 — PLAYING, 2 — SUSPEND, 3 — FINISHED),
        "round": "current_round"
    }

/api/events?from=<round> =>
    [
        ["round", "time(millisec)", "service_id", "attacker_id", "victim_id"]
        ...
    ]

/scoreboard.json =>
    {
        "round": "round#"
        "scoreboard": [
            {
                "name": "team_name",
                "score": "score",
                "services": [
                    {
                        "flags": "flags#",
                        "status": 101|..., (101:OK, 102:CORRUPT, 103:MUMBLE, 104:DOWN, else:CHECKER_ERROR)
                        "id": "service_id"
                    },
                    ...
                ]
            },
            ...
        ]
    }

Обновления:

/api/info - нужно для инициализации

/apiws/events => 
    {
        "type": "attack" | "state"
        "attack" | "state" : class attack | state
    }

class attack { // Отправляется в момент, когда произошла атака
    "round": number,
    "service_id": string or number,
    "attacker_id": string or number,
    "victim_id": string or numbrt,
}

class state { // Отправляется в момент окончания раунда, содержит информацию за прошедший раунд, отправляется в момент открытия соединения websocket
    // То же, что в scoreboard.json
}