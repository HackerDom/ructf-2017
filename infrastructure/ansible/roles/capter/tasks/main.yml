---
- hostname:
    name: capter

- name: create user
  user: name=capter shell=/bin/false

- name: copy motd
  copy: src=motd dest=/etc/motd

- name: download golang
  unarchive:
    src: go1.8.1.linux-armv6l.tar.gz
    dest: /usr/local/
    creates: /usr/local/go

- name: add go bin to PATH
  copy: src=go_env.sh dest=/etc/profile.d/go_env.sh owner=root mode=0755

#- name: add sources
#  become: yes
#  become_user: capter
#  copy:
#    src: "{{ playbook_dir }}/../../services/capter/{{ item }}"
#    dest: "/home/capter/go/src/"
#    owner: capter
#    group: capter
#  with_items:
#    - capter
#    - capterca

- name: copy service files
  synchronize: 
    src: go
    dest: /home/capter/
    rsync_opts: "--chmod=D0770 --chmod=F0660 --chown=capter:capter"
  notify: enable and restart services

- name: copy capterca
  copy: src=capterca dest=/srv/
  notify: enable and restart services

- name: fix permissions for capterca
  file: name=/srv owner=capter group=capter recurse=yes state=directory

- name: make service executable
  file: path={{item}} mode=0755
  with_items:
    - /home/capter/go/bin/capter
    - /srv/capterca
  notify: enable and restart services

#- name: build services
#  notify: enable and restart services
#  become: yes
#  become_user: capter
#  shell: . /etc/profile.d/go_env.sh && /usr/local/go/bin/go get && CGO_ENABLED=0 /usr/local/go/bin/go build
#  args:
#    chdir: "/home/capter/go/src/{{ item }}"
#  with_items:
#    - capter
#    - capterca

#- name: remove capterca sources
#  file: name=/home/capter/go/src/capterca state=absent

- name: remove capterca sources
  file: name=/home/capter/go/src/capter/Dockerfile state=absent

#- name: move capterca to /srv/
#  command: mv /home/capter/go/bin/capterca /srv/
#  notify: enable and restart services

- name: add service files
  copy: src={{ item }}.service dest=/etc/systemd/system/{{ item }}.service
  notify: enable and restart services
  with_items:
    - capter
    - capterca
